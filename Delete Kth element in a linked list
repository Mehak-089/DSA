#include <iostream>
using namespace std;

// Define the Node structure
class Node {
public:
    int data;
    Node* next;

    // Constructor to create a new node
    Node(int data) {
        this->data = data;
        this->next = nullptr;
    }
};

// Function to traverse and print the linked list
void printLinkedList(Node* head) {
    Node* current = head;
    while (current != nullptr) {
        cout << current->data << " ";  // Print the data of the current node
        current = current->next;       // Move to the next node
    }
    cout << endl;
}
Node* deleteK(Node* head, int k){
    if(head==NULL) return head;
    if(k==1){
        Node *temp = head;
        head = head->next;
        delete temp;
        return head;
    }
    int count = 0;
    Node *temp=head;
    Node *prev= NULL;
    while(temp!=NULL){
        count++;
        if(count==k){
            prev->next=prev->next->next;
            delete temp;
            break;
        }
        prev=temp;
        temp = temp->next;
    }
    return head;
}
int main() {
    // Manually creating the linked list: 1 -> 2 -> 3 -> 4 -> 5
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);
    head->next->next->next->next = new Node(5);
     head=deleteK(head,3);
    // Traverse and print the linked list
    printLinkedList(head);

    return 0;
} 

/tmp/Zx99EAxbJP.o
1 2 4 5 


=== Code Execution Successful ===
